*helphelp.txt*   For Vim version 7.3.  最近更新: 2010年8月


		  VIM 參考手冊    by Bram Moolenaar
				譯者: Willis
				http://vimcdoc.sf.net


幫助文件之幫助						*helphelp*

1. 幫助命令			|online-help|
2. 翻譯幫助文件			|help-translated|
3. 編寫幫助文件			|help-writing|

==============================================================================
1. 幫助命令						*online-help*

			*help* *<Help>* *:h* *:help* *<F1>* *i_<F1>* *i_<Help>*
<Help>		或	
:h[elp]			打開一個窗口並以只讀方式顯示幫助文件。如果已經打開了一
			個幫助窗口，就繼續使用那個窗口。不然，如果當前窗口佔據
			了屏幕的完整寬度或者至少有 80 個字符寬，幫助窗口會出現
			在當前窗口的正上方。再不然，新窗口就開在最上方。
			如果主幫助文件有多個語言版本，'helplang' 選項選擇使用
			的語言。
			{Vi 無此功能}

						*{subject}* *E149* *E661*
:h[elp] {subject}	類似於 ":help"，但附加跳轉到 {subject} 標籤上。
			{subject} 可以包含 "*"、"?" 和 "[a-z]" 這樣的通配符:
			   :help z?	跳到任何包含 "z" 的命令的幫助
			   :help z.	跳到關於 "z." 的幫助
			如果不能完全匹配該模式，或者有多個匹配，那就使用 "最
			好" 的匹配。這裡，有一個相當複雜的算法來排定匹配的優先
			順序。它的計算涉及到以下諸方面:
			- 大小寫完全相同的優先於大小寫不完全相同的。
			- 開始於非字母數字之後的優先於從單詞中間開始的。
			- 位於或接近標籤開始處的優先於離此距離較遠的。
			- 匹配的字母數字字符越多越優先。
			- 匹配越短的越優先。

			如果該 {subject} 有多個語言的幫助，'helplang' 選項用來
			選擇所用的語言。要找到某個標籤某個特定的語言版本，附加
			上 "@ab"，其中 "ab" 是雙字母的語言代碼。參見
			|help-translated|。

			注意 給出越長的 {subect}，找到的匹配就越少。使用命令行
			補全功能 (在 ":help subject" 之後輸入 CTRL-D
			|c_CTRL-D|)，你會瞭解這是如何工作的。
			如果有多個匹配，你可以通過敲擊 CTRL-D 得到它們的列表。
			例如: >
				:help cont<Ctrl-D>

<			要找尋 CTRL-V 的幫助不需要打 ":help CTRL-V"，可用: >
				:help ^V
<			這也適用於和其它字符混用的情況。例如尋找 CTRL-V 在插入
			模式的幫助: >
				:help i^V
<
			要使用正規式 |pattern|，先 ":help"，然後在幫助窗口裡使
			用 ":tag {pattern}"。這時，":tnext" 命令可以跳轉到後一
			個匹配，"tselect" 列出所有的匹配並讓你選擇一個。 >
				:help index| :tse z.

<			如果沒有參數，你會看到 "help" 的匹配而不是列出所有可能
			的匹配 (那會非常慢)。
			顯示的匹配個數限於 300 個。

			該命令可以後面跟一個 '|' 並緊跟另外一個命令。不過，你
			不需要在 help 命令裡轉義 '|'。所以下面這些都沒問題: >
				:help |
				:help k| only
<			注意 如果 '|' 之前有空格，它是 ":help" 參數的一部分。
			你也可以用 <LF> 或 <CR> 來分隔 help 命令和其後的命令。
			你需要先輸入 CTRL-V，再輸入 <LF> 或 <CR>。例如: >
				:help so<C-V><CR>only
<			{Vi 無此功能}

:h[elp]! [subject]	類似於 ":help"，但在非英語幫助文件裡，先查找包含和當前
			文件相同語言的標籤的文件。參見 |help-translated|。

							*:helpg* *:helpgrep*
:helpg[rep] {pattern}[@xx]
			搜索所有的幫助文本並給出一個匹配 {pattern} 行的列表。
			跳轉到第一個匹配。
			可選的 [@xx] 指定只尋找 "xx" 語言裡的匹配。
			你可以用 |quickfix| 命令來瀏覽其它的匹配。例如，
			|:cnext| 會跳到下一個。在 quickfix 窗口裡，也可以用
			|:cwindow| 得到所有的匹配的列表。
			{pattern} 視為 Vim 的正規表達式 |pattern|。
			不使用 'ignorecase'，你可以加上 "\c" 來忽略大小寫。
			大小寫敏感的搜索示例: >
				:helpgrep Uganda
<			大小寫不敏感的搜索示例: >
				:helpgrep uganda\c
<			尋找中文幫助的搜索: >
				:helpgrep backspace@cn
<			模式不支持換行符，必須在一行內匹配。為此，可用 |:grep|
			代替，但要得到幫助文件的列表就比較複雜了。
			後面不能跟其他的命令。其餘部分都被當作模式的一部分。如
			果需要，可以用 |:execute|。
			不會在壓縮的幫助文件裡搜索 (Fedora 壓縮幫助文件)。
			{Vi 無此功能}

							*:lh* *:lhelpgrep*
:lh[elpgrep] {pattern}[@xx]
			類似於 ":helpgrep"，除了使用位置列表代替 quickfix 列表
			之外。如果幫助窗口已經打開，使用該窗口的位置列表。不
			然，打開新幫助窗口，並設置該窗口的位置列表。當前窗口的
			位置列表不改變。

							*:exu* *:exusage*
:exu[sage]		顯示 Ex 命令的幫助。目的是為了模擬對應的 Nvi 命令。
			{Vi 無此功能}

							*:viu* *:viusage*
:viu[sage]		顯示普通命令的幫助。目的是為了模擬對應的 Nvi 命令。
			{Vi 無此功能}

如果不給出參數，|:help| 會打開 'helpfile' 選項指定的文件。否則，就會在
'runtimepath' 選項指定的多個路徑中所有的 "doc/tags" 文件裡查找所要求的標籤。

幫助窗口的起始高度可以用 'helpheight' 選項來設置 (缺省是 20)。

標籤用來跳轉到指定的主題。有兩種方法可以選擇:
- 在命令或選項之上用 "CTRL-]" 命令。這只有在標籤是關鍵字 (見 'iskeyword') 才
  行。"<C-Leftmouse>" 和 "g<LeftMouse>" 等價於 "CTRL-]"。
- 用 ":ta {subject}" 命令。這對於包含非關鍵字字符的標籤也適用。

用 CTRL-T 或者 CTRL-O 跳回來。
用 ":q" 關閉幫助窗口。

如果你查找的項目有多個匹配，你可以這樣依次跳轉到每個匹配:
1. 先打開幫助窗口。
2. 用 ":tag" 命令，標籤前加上斜槓。例如: >
	:tag /min
3. 用 ":tnext" 跳轉到下一個匹配的標籤。

你可以為插件或其他項目增加幫助文件。為此，你並不需要修改現有的幫助文件。見
|add-local-help|。

關於如何寫一個本地的幫助文件，見 |write-local-help|。

注意: 本地幫助文件的標題行會自動列在幫助文件 "help.txt" 的 "LOCAL ADDITIONS"
一節 |local-additions|。只有在 Vim 裡實際察看該文件才會這麼做，該文件本身並沒
有被修改。這是通過動態地遍歷所有幫助文件並提取每個文件的首行來完成的。其中，跳
過 $VIMRUNTINE/doc 裡的文件。
(譯者注: 目前，即使使用經過翻譯的幫助，本地幫助文件只能在英文的 help.txt 裡看
到。用 :help@en 訪問。)

							*help-xterm-window*
如果你想在另外一個 xterm 窗口裡察看幫助，可以用如下的命令: >
	:!xterm -e vim +help &
<

			*:helpfind* *:helpf*
:helpf[ind]		和 |:help| 類似，但用一個對話框來提示輸入參數。
			這只是為了向後兼容的需要。它現在執行 ToolBar.FindHelp
			菜單項而不是內建的對話框。
			{僅當編譯時加入 |+GUI_GTK| 特性才有效}
			{Vi 無此功能}

					*:helpt* *:helptags*
				*E154* *E150* *E151* *E152* *E153* *E670*
:helpt[ags] [++t] {dir}
			為目錄 {dir} 生成幫助標籤文件 tags。它掃瞄該目錄中所有
			的 "*.txt" 和 "*.??x" 文件中幫助標籤定義。標籤定義出現
			在星號之間。"*.??x" 文件是經過翻譯的文件。它們相應產生
			"tags-??" 文件，參見 |help-translated|。所生成的標籤文
			件經過排序。
			如果其中有重複項，會給出錯誤信息。
			直接覆蓋已有的標籤文件，不會有提示。
			可選的 "++t" 參數強制加入 "help-tags" 標籤。如果 {dir}
			等於 $VIMRUNTIME/doc，也會這樣做。
			例如，要重建運行時目錄的幫助標籤 (需要有相應寫權限): >
				:helptags $VIMRUNTIME/doc
<			{Vi 無此功能}


==============================================================================
2. 翻 譯 幫 助 文 件					*help-translated*

除了原始的英語幫助文件外，我們可以添加其他語言的翻譯版本。Vim 會在所有
'runtimepath' 的目錄的 "doc" 子目錄裡查找幫助文件。這只有在編譯時加入
|+multi_lang| 特性才會有效。

目前，有以下的翻譯可用:
	中文     - 多位作者
	法語     - David Blanchet 翻譯
	意大利語 - Antonio Colombo 翻譯
	波蘭語   - Mikolaj Machowski 翻譯
	俄羅斯語 - Vassily Ragosin 翻譯
在 Vim 網頁上可以找到這些翻譯: http://www.vim.org/translations.php

幫助文件的翻譯版本包含如下文件:

	help.abx
	howto.abx
	...
	tags-ab

"ab" 是一個雙字母的語言代碼。這樣，中文的文件名是:

	help.cnx
	howto.cnx
	...
	tags-cn

'helplang' 選項設置若干語言偏好。 缺省值根據當前環境設置。Vim 會先在偏好的語言
裡查找匹配的標籤。如果沒有，就使用英語版本。

要查找某一特定的語言的標籤，在標籤後面加上 "@ab"，其中的 "ab" 是兩字節的語言代
碼。示例: >
	:he user-manual@cn
	:he user-manual@en
前者查找中文的用戶手冊，即使 'helplang' 為空。後者查找英語用戶手冊，即使
'helplang' 設置為 "cn"。

":help" 的命令行補全只會在有多個語言版本的標籤時顯示 "@en" 後綴。如果只有英語
版本，"@en" 就省略。

如果在一個非英語幫助文件裡使用 |CTRL-]| 或者 ":help!"，Vim 會先找相同語言的標
簽。如果沒有，再根據 'helplang' 選擇語言。

Help 文件一定要使用 latin1 或 utf-8 編碼。Vim 如果發現首行有非 ASCII 的字符，
就假設是 utf-8 編碼。所以，你至少要翻譯頭部的 "For Vim version"。

同一個目錄裡相同語言的幫助文件必須使用相同的編碼。不同語言或者相同語言但在不同
的目錄下可以使用不同的編碼。

為譯者的提示:
- 不要翻譯標籤本身。這樣才能用 'helplang' 來指定語言偏好。你可以在自己的語言裡
  加入新的標籤。
- 如果不想翻譯文件的部分內容，用 "tag@en" 的形式標記英語版本的標籤。
- 生成一個包，包含所有的幫助和和標籤文件，以便下載。用戶把它解開到某個 "doc"
  目錄下就可以開始使用了。請告知 Bram，他可以在 www.vim.org 上給加一個鏈接。
- 用 |:helptags| 命令生成標籤文件 tags。該命令會在指定目錄下找到所有語言的版
  本。

==============================================================================
3. 編 寫 幫 助 文 件					*help-writing*

為了方便使用，為插件編寫的 Vim 幫助文件應該遵循標準 Vim 幫助文件的格式。如果你
在編寫新幫助文件，最好從現有的文件複製一份作為模板。

幫助文件的首行的格式應該是這樣的:

*helpfile_name.txt*	For Vim version 7.3	Last change: 2010 June 4

第一個字段是指向幫助文件名的鏈接。第二個字段描述所適用的 Vim 版本。最後一個字
段給出該文件的最後修改日期。字段之間用製表符分隔。

在幫助文件的底部放上 Vim 的模式行，它設置 'textwidth'、'tabstop' 選項，並把
'filetype' 設為 'help'。請不要在 modeline 上設置全局選項，否則讀取幫助的用戶會
有不希望的後果。


標 簽

要定義幫助標籤，把名字放在星號之間 (*標籤名*)。標籤名應該和所有 Vim 幫助標籤名
不同，最好以 Vim 插件名開頭。標籤名通常行右對齊。

要引用已有幫助標籤並建立一個熱鏈，把名字放在豎線 (|) 之間，如 |help-writing|。

要在幫助文件裡引用 Vim 選項，可以把選項名在單引號之間，如 'statusline'。


高 亮

要定義欄標題，在行尾加上波浪符。欄標題會使用不同顏色的高亮。例如

欄標題~

要分隔同一幫助文件的不同小節，加上一行從首列開始的 '=' 字符序列。小節分隔行會
使用不同的高亮。

要不加修飾地引用一段 ex 命令塊，在塊之前的那行最後加上一個大於號 (>) 字符，然
後在塊之後的那行放上一個小於號 (<) 字符作為該行的第一個非空白字符。任何從第一
列開始的行也會隱含地結束之前的 ex 命令塊。例如 >
    function Example_Func()
	echo "Example"
    endfunction
<

以下內容在 Vim 幫助文件中採用不同的高亮:
  - 使用 <> 記號的特殊鍵名，如 <PageDown>，或 Ctrl 字符，如 CTRL-X
  - 任何 {花括號} 之間的內容，如 {lhs} 和 {rhs}

"Note"，"Notes" 和類似的單詞會神奇地自動得到獨特的高亮，下面的也是:
	*Todo	something to do
	*Error	something wrong

具體細節可見 $VIMRUNTIME/syntax/help.vim

 vim:tw=78:ts=8:ft=help:norl:
