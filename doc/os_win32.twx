*os_win32.txt*  For Vim version 7.3.  最後更新: 2010年7月


		  VIM 參 考 手 冊    作者：George Reilly
		                     譯者: Dasn, tocer
		                     http://vimcdoc.sf.net

						*win32* *Win32* *MS-Windows*
本文描述 Vim Win32 版本的一些特性。

Vim 的 Win32 版本可以在 Windows NT、95、98、ME、XP、Vista 和 Windows 7
上運行，並且有 console (控制 台，就是命令提示符窗口 譯者) 和 GUI (圖形界面)
兩個版本。

32 位版本也可運行在 64 位 MS-Windows 系統上。

有用於 Windows 3.1[1] Win32s 子系統的 GUI 版本。你也可以用 Vim 的 32 位 DOS
版本來代替。參見 |os_msdos.txt|。

1. 一些已知的問題		|win32-problems|
2. 啟動				|win32-startup|
3. 恢復屏幕內容			|win32-restore|
4. 使用鼠標			|win32-mouse|
5. 在 Windows 3.1 下運行	|win32-win3.1|
6. Win32 常見問題解答 (迷你版)	|win32-faq|

此外，還有一些 Win32 和 DOS 版本通用的條目：
文件位置			|dos-locations|
使用反斜槓			|dos-backslash|
標準映射			|dos-standard-mappings|
屏幕的輸出與顏色		|dos-colors|
文件格式			|dos-file-formats|
:cd 命令			|dos-:cd|
中止鍵				|dos-CTRL-Break|
臨時文件			|dos-temp-files|
默認的 Shell 選項		|dos-shell|

Win32 用戶圖形界面		|gui-w32|

作者：
Win32 版本的作者是 George V. Reilly <george@reilly.org>。
最初 Windows NT 版本的移植工作是由 Roger Knobbe <RogerK@wonderware.com> 完成
的。
GUI 版本的作者是 George V. Reilly 和 Robert Webb。

有關編譯的討論請參考 "src/INSTALLpc.txt"。		*win32-compiling*

==============================================================================
1. 一些已知的問題				*windows95* *win32-problems*

Vim 在 Windows 95 的控制台裡運行時會出一些問題。據我們所知，這些問題在 Windows
98 和 Windows ME 上也會出現。

微軟內部人士的話："Win95 的控制台一直不穩定，並且將永遠這樣。"

1、不支持死鍵 (dead key，與重音有關的鍵，下文有解釋 譯者注)。
2、可以用命令 ":set columns=nn lines=nn" 改變窗口大小，但是此後執行外部命令可
   能會使系統掛起或當機。
3、屏幕刷新慢，除非你把 'columns' 和 'lines' 設置為 非 DOS 標準值，但是這樣會
   引起上述第二個問題！

如果這些問題影響你的使用，你可以換用 32 位的 MS-DOS 版本 或 Win32 GUI 版本。

自動補全文件名的時候，雖然 Vim 會匹配短的文件名，但是卻會尋找並使用對應的相應
的長文件名。例如，如果有一個長文件名 "this_is_a_test"，其短文件名是
"this_i~1"，命令 ":e *1" 編輯文件 "this_is_a_test"。

==============================================================================
2. 啟動							*win32-startup*

當前目錄						*win32-curdir*

如果啟動 Vim 時後面帶一個文件名作為參數，並且指定了該文件的完整路徑 (例如：以
"x:\" 開頭的路徑)，Vim 會認為該文件是從文件管理器啟動，並把當前目錄 (:cd 命令
查看 譯者) 切換到文件所在目錄。如果不想這樣，只要把路徑裡的反斜槓 ("\") 換成斜
槓 ("/") 即可。例如： >

	vim c:\text\files\foo.txt

當前目錄切換到 "C:\text\files"。 >

	vim c:/text\files\foo.txt

不改變當前目錄。


term 選項						*win32-term*

Vim 的 Win32 版本僅有的終端類型是 "win32"，它是內置的。如果你把 'term' 設置成
其它的值，Vim 的行為就可能變的很奇怪。所以 Vim 不會從環境變量 "TERM" 裡獲取
'term' 的值。

$PATH 環境變量						*win32-PATH*

Vim 可執行程序的路徑被加入到變量 $PATH 中。這主要使 "!xxd" 能夠運行，因為它在
工具菜單中。這也意味著當 executable() 返回 1 時，該可執行程序確實能夠執行。

==============================================================================
3. 恢復屏幕內容						*win32-restore*

如果你設定了 'restorescreen' 選項 (默認設置)，當你退出 Vim 或者執行外部命令
時，Vim 能恢復控制台原來的內容。可以用 ":ser nors" 命令關掉這個選項。
							|'restorescreen'|

==============================================================================
4. 使用鼠標						*win32-mouse*

Vim 的 Win32 版本支持鼠標。如果你使用兩鍵鼠標，可以用同時按下左右兩鍵的辦法來
模擬第三鍵 (中鍵) － 但是，請注意：在 Win32 GUI 上，如果你的右鍵用來呼叫彈出菜
單 (參見 'mouse')，那麼你最好先按下鼠標左鍵 (左右兩鍵同時按的時候，左鍵略快於
右鍵 譯者)。						|mouse-using|

如果鼠標不好用，你可以試著禁用控制台的 "快速編輯模式"。

==============================================================================
5. 在 Windows 3.1 下運行				*win32-win3.1*

						*win32s* *windows-3.1*
有一個特殊的 Win32 版本的 Gvim 可以在 Windows 3.1 和 3.11 運行。你需要用
Visual C++ 4.1 編譯 gvim.exe。

要想在 Windows 3.1 或 3.11 上運行 Win32 版本的 Vim，你需要安裝 Win32s (Win32s
是微軟發佈的一套子系統，主要作用是讓  Windows 3.1x 或  WfW 3.1x 這些 16 位操作
系統借助其類庫運行 32 位應用程序。譯者)。也許你在安裝別的軟件時已經安裝了
Win32s。如果 Vim 不能正常運行，請下載最新的 1.30c 版本的 Win32s。你可以在這
裡下載：

	http://support.microsoft.com/download/support/mslfiles/pw1118.exe

(微軟又把它換地方了！我們現在也不知道在哪裡 :-( )。

gvim.exe 之所以有兩個版本，是因為 Win32s 版本是用 VC++ 4.1 編譯的。這是最後一
個支持 Win32s 的 VC++。VC++ 5.0 好一些，所以用它來編譯 Win32 版本。除此以外，
這兩個版本沒有什麼不同。如果你在一個混合環境裡工作，你可以使用 Win32s 的
gvim.exe，兩者都支持。

Win32s 版本的 gvim 與 95/NT 系統上運行的 Win32 版本的 gvim 是一樣的。在 Win32s
系統裡有以下不同：
－你不能使用長文件名，因為 Windows 3.1 不支持！
－執行外部命令時無退出碼。在 ":make" 之後，必須要自己 ":cn"。

==============================================================================
6. Win32 常見問題解答 (迷你版)				*win32-faq*

問：為什麼 Win32 版本的 Vim 在 Windows 95 裡運行時屏幕的更新速度特別慢？
答：Win95 對 32 位控制台程序的支持很不好，有許多 Bug。不知道什麼原因，Vim 在標
    准解析模式 (80x25，80x43，80x50) 下屏幕更新速度特別慢，而 16 位 DOS 版本比
    Win32 版本要快得多。如果改變一下行列的值 (例如：":set columns=100" 或
    ":set lines=40")，更新速度就會和 16 位 DOS 版本一樣快。

    警告：改變 'columns' 屬性可能導致 Windows 95 在刷新時死機 (要抱怨就找微軟
    吧！)，不過在大多數情況下沒什麼問題，所以這一屬性還保留著，但是一定要慎用
    'columns'。

    改變屏幕的解析度可以加快屏幕更新，但是它會帶來其它的問題。比如，如果你不使
    用標準的解析模式，特別是當 'columns' 的值不是 80 的時候，執行外部命令 (例
    如：":!dir") 會導致 Vim 停止響應。一旦這種情況發生，就不可能把解析模式改回
    到執行外部命令之前的狀態，所以在修改 'lines' 和 'columns' 的時候要特別、特
    別小心！事實上，如果 'columns' 的值不是 80，Vim 不會讓你執行外部命令，不然
    之後死機就麻煩了。

    在 Windows NT 上沒有這些問題。無論 'lines' 和 'columns' 是什麼值，屏幕更新
    速度都很快，外部命令也不會使 Vim 停止響應。

問：Windows 95 上，既然 Win32 版本屏幕更新的速度不如 16 位 DOS 版本快，那我為
    什麼還要用 Win32 版本？
答：首先，Win32 版本不像想像的那麼慢，尤其是把 'lines' 和 'columns' 設置成非標
    准數值後，速度還是挺快的。其次，16 位的 DOS 版本有許多的限制，例如：不能做
    過大的改動；不能處理長文件名。Win32 版本沒有這些限制，並且總的來看，還是
    Win32 版本快 (對於 32 位的 DJGPP DOS 版本的 Vim 也一樣)。Win32 版本在對屏
    幕、鼠標和鍵盤的控制上，要比 DJGPP 版本好。

問：在 Windows NT 上，16 位的 DOS 版本 和 Win32 版本那個好？
答：為什麼要在 NT 上運行 16 位 DOS 版本？在 NT 上運行 Win32 版本的 Vim 時，屏
    幕的更新速度和 16 位的 DOS 版本一樣快，並且也沒有上面所提到的一些限制。還
    有， DOS 程序啟動和運行的速度都比 Win32 慢。在非 Intel 構架的 NT 平台上，
    DOS 應用程序在 80x86 虛擬機上運行，所以特別慢，簡直無法使用。

問：怎樣改變字體？
答：在 GUI 版本裡，可以用 'guifont' 選項。例如: >
	:set guifont=Lucida_Console:h15:cDEFAULT
<   在控制台版本裡，你需要修改控制台窗口的字體，不能在 Vim 裡修改字體。

問：為什麼我使用 ":set lines=xx" 或其它相似的命令改變控制台窗口大小時，字體會
    改變？(Win95)
答：你在 MS-DOS 命令提示的字體屬性裡設置了 '自動'，這使得 Win95 自動選擇合適的
    字體 (太糟了！)。明確地指定一種字體就可以解決這個問題。

問：為什麼不能在 Vim 裡 "粘貼" (Win95)？
答：在 MS－DOS 窗口的屬性對話框中，找到 "雜項/快速粘貼"，把前面的對勾去掉。
    你也需要在 Vim 裡執行 ":set paste" 以避免副作用。	|'paste'|

問：控制台版本的 Vim 怎樣在 Windows 95 裡輸入死鍵？
    (死鍵是重音鍵，諸如：尖音符號 (acute)，鈍音符號 (grave)，umlaut (元音變音)
    等，它們本身不能產生字符，但是當它們後面跟另外的鍵時就會產生語音字符，例
    如：a-acute、e-grave、u-umlaut、n-tilde 等等。【這些語音符號通常出現在字母
    的上面，舉個例子，比如上面提到的 e-grave 是這個樣子 è，因為原文中是用語言
    描述的，沒有直接引用這些字符，所以簡單解釋一下，譯者注】。這些對大多數歐洲
    語言很有用。據我所知，英語佈局的鍵盤不用死鍵)。
答：不能。Windows 95 控制台的輸入模塊不能正確工作，我沒有能力解決這些問題。下
    面的話援引自微軟一名資深程序員：
        Win95 控制台一直不穩定，而且將永遠這樣。

        這種不穩定性是不可避免的，因為我們徘徊於 MS-DOS 的鍵盤 TSR (比如
        KEYB，我們需要它來加工數據，對國際版本很重要) 和 Win32 兩個世界之間。

        於是，在 MS-DOS 上不存在的按鍵 (比如死鍵) 在 Win32 控制台上卻大量存
        在，有些按鍵的功能也迥然不同 (比如 CapsLock)。這些都使得 Win95 的控制
        台變得不穩定。

        更不用說多語言鍵盤佈局的問題……

    也許你可以用二合字母機制 (digraphs) 來解決這個問題。|digraphs|

    最好的解決方案是用 Win32 GUI 版本的 gvim.exe。要不然你就換一個支持死鍵的
    DOS 版本的 Vim，有報告說那裡沒有問題。

問：在 Windows NT 上怎樣輸入死鍵？
答：NT 3.51 上可以正常輸入死鍵，和在別的程序裡的輸入方法一樣。
    NT 4.0 上，你必須保證你的區域設置 (控制面板鍵盤) 和你當前使用的區域設置相
    同。否則 NT 會崩潰。這是 NT 的問題，不是 Vim 的問題。

問：我用 Vim 編輯一個符號鏈接，這個鏈接指向 UNIX NFS 文件服務器上的一個文件。
    當我保存這個文件時，Vim 不能通過鏈接保存到服務器上，而是刪除了這個鏈接，
    創建了一個新的文件。為什麼？
答：在 UNIX 系統上，Vim 可以處理鏈接 (符號鏈接或硬鏈接)。Vim 先把文件寫入一個
    備份文件中，然後用備份文件覆蓋原文件。這樣做是為了保證所有屬性都和原文件相
    同。在非 UNIX 系統上，首先原文件被改名，然後寫入新文件。只有保護位和原文件
    相同。但是，這個方法不能處理 NFS 文件系統，那裡除了鏈接還有一些其它問題。
    唯一的解決辦法是禁用備份文件，可以通過命令 ":set nobackup nowritebackup" 
    實現 						|'writebackup'|

問：我正通過 Samba 使用 Vim 編輯 Unix 系統上的一個文件。當我保存文件時，文件所
    有者被改變了。為什麼？
答：當保存文件時，Vim 會給原來文件換名，使之成為一個備份 (以防寫入文件過程中失
    敗)。然後該文件作為一個新文件被保存。Samba 這時把它賦予文件系統上默認的所
    有者，可能會和原所有者不一樣。
    為避免此問題，可以設置 'backupcopy' 選項為 "yes"。Vim 會用複製的方式建立備
    份，然後再覆蓋原文件。這樣文件所有者就不會改變了。

問：執行 ":make" 的時候怎樣看到輸出？
答：通常，你需要一個 tee 程序，它可以把輸入 (make 的輸出) 複製到標準輸出和錯誤
    信息文件裡。你可以在以下地址找到 tee (還有其它 GNU 工具)。
    http://gnuwin32.sourceforge.net 或 http://unxutils.sourceforge.net
    或者你也可以在 http://www.cygwin.com/ 下載 Cygnus 版本的 GNU 工具。
    其它 Win32 上運行的 Unix 風格的工具可以在以下地址找到。
    http://directory.google.com/Top/Computers/Software/Operating_Systems/Unix/Win32/
    得到了 tee 程序之後，你需要把下面的命令添加到你的 _vimrc 文件中： >
	:set shellpipe=\|\ tee

問：我把文件保存到一台運行 VisionFS 的遠程計算機上，但是文件找不到了！
答：VisionFS 不能處理特定的句號 (.) 加三個字母的擴展名，SCO 聲稱這是為了兼容
    16 位的 DOS/Windows 環境。下面的兩個命令可以說明問題：
>
	echo Hello > file.bat~
	dir > file.bat
<
    "dir" 命令的輸出被定向到 "file.bat~" 文件，而並沒有新建一個 "file.bat" 文
    件。這種行為在 Vim 裡的體現就是，當你編輯一個名為 "foo.bat" 的文件時，Vim
    會自動創建名為文件名加上 '~' 字符的臨時文件，也就是 "foo.bat~"。寫入
    "foo.bat" 文件時，最後它倒被刪除了 (譯者注: Vim 想刪除的本來是臨時文件)。

    解決辦法: 在你的 _vimrc 文件裡加入： >
	:set backupext=.temporary

問：怎樣改變光標閃爍的頻率？
答：不能改。這是 NT 控制台的一個限制，據報告，NT 5.0 可以一次改變所有控制台的
    閃爍頻率。

							*:!start*
問：如何異步地執行一個外部命令？
答：執行外部命令的時候，你可以用 ":!start" 代替 ":!" >
	:!start winfile.exe<CR>
<   用 "start" 命令不像 ":!" 那樣 (切換到另一個屏幕、調用一個新的控制台，然後
    等待程序執行結束)；該命令的使用，意味著你所運行的程序不會影響到當前編輯的
    文件。用 ":!start" 命令運行程序不會得到 Vim 的打開文件句柄，這意味著他們不
    需要在 Vim 之前退出。
    要避免這種特殊照顧，可以用 ":! start"。

問：我用 Win32s 版本，每當我執行外部命令時 (比如 "make")，Vim 不等程序執行完畢
    就返回了！幫幫忙！
答：問題出在 32 位應用程序 (Vim) 不能從 16 位應用程序 (你的 DOS 程序) 中得到程
    序執行完成的信號。Vim 可以解決類似的問題，但是必須設置一下你的 DOS 命令，
    讓它在窗口裡運行，而不是全屏狀態。不巧的是，安裝 Windows 後的默認值是 "全
    屏"。要改變這一設置：
    1) 打開 PIF 編輯器 (在主程序組裡)。
    2) 打開 "_DEFAULT.PIF" 文件 (在 Windows 目錄下)。
    3) 把顯示選項從 "全屏" 改為 "窗口"。
    4) 保存退出。

    測試，啟動 Vim，輸入 >
	:!dir C:\<CR>"
<   你應該看到一個 DOS 窗口短暫出現，顯示文件及目錄列表。
	
問：我在 Win32s 和 NT 上使用 Vim。在 NT 上，我可以把控制台的默認值設置為 50
    行，這樣當我用 ":sh" 命令時，就會得到一個 80x50 的 shell。我可以在 Win3.1x
    下這樣做麼？我會不會只能使用 80x25？
答：編輯 SYSTEM.INI 文件，在 [NonWindowsApp] 一節加入 "ScreenLines=50"。這樣，
    DOS 窗口和外部 DOS 命令就會在 50 行的窗口裡運行。

 vim:tw=78:fo=tcq2:ts=8:ft=help:norl:
