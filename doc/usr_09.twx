*usr_09.txt*	For Vim version 7.3  最近更新：2005年3月

		    Vim用戶手冊 - by Bram Moolenaar
		譯者：Nek_in http://vimcdoc.sf.net

			  使用 GUI 版本


Vim 能在一般的終端中很好地工作。GVim 則可以完成相同，甚至更多的功能。Gvim 能提
供菜單，工具條，滾動條和其它東西。本章介紹這些額外的功能。

|09.1|	GUI 版本的組件
|09.2|	使用鼠標
|09.3|	剪貼板
|09.4|	選擇模式

     下一章：|usr_10.txt|  做大修改
     前一章：|usr_08.txt|  分割窗口
       目錄：|usr_toc.txt|

==============================================================================
*09.1*	GUI 版本的組件

你可以在你的桌面上放一個啟動 gVim 的圖標。此外，下面的任一個命令也可以啟動
gVim：
>
	gvim file.txt
	vim -g file.txt

如果這樣不行，可能是因為你的 Vim 不支持 GUI 版本特性。你需要先安裝一個合適的版
本。
    執行命令後，Vim 會打開一個窗口，並顯示文件 "file.txt"。窗口的樣子取決於
Vim 的版本。一般是下面這個樣子 (盡可能地用 ASCII 碼展示)：

	+----------------------------------------------------+
	| file.txt + (~/dir) - VIM			   X |	<- 窗口標題
	+----------------------------------------------------+
	| File	Edit  Tools  Syntax  Buffers  Window  Help   |	<- 菜單欄
	+----------------------------------------------------+
	| aaa  bbb  ccc  ddd  eee  fff	ggg  hhh  iii  jjj   |	<- 工具欄
	| aaa  bbb  ccc  ddd  eee  fff	ggg  hhh  iii  jjj   |
	+----------------------------------------------------+
	| file text					 | ^ |
	| ~						 | # |
	| ~						 | # |	<- 滾動條
	| ~						 | # |
	| ~						 | # |
	| ~						 | # |
	|						 | V |
	+----------------------------------------------------+

最大的一片空間是文件的內容。這部分與終端上看到的是一樣的，只是顏色和字體可能有
一點差別。


窗 口 標 題

窗口最頂上是窗口標題。這由你的窗口系統繪製。Vim 會在這個標題上顯示當前文件的相
關信息。首先顯示的是文件名，然後是一個特殊字符，最後是用括號括住的目錄名。下面
的是這些特殊字符的含義：

	-	文件不能被修改 (例如幫助文件)
	+	已經被修改過
	=	文件只讀
	=+	文件只讀，但仍被修改過

如果沒有顯示任何特殊字符，表示這是一個普通的，沒有改過的文件。


菜 單 欄

你知道菜單是怎麼工作的，是吧？ Vim 有些通用的菜單，外加一些特別的。逐個看看，
猜測一下這些菜單都可以用來幹什麼。另一個相關的子菜單是 Edit/Global，你可以在那
裡找到這些菜單項：

	Toggle Toolbar		使工具條可見/不可見
	Toggle Bottom Scrollbar	使底部的滾動條可見/不可見
	Toggle Left Scrollbar	使左邊的滾動條可見/不可見
	Toggle Right Scrollbar	使右邊的滾動條可見/不可見

在大多數系統裡，你可以把菜單 "撕下來"。選中菜單最上面的菜單欄，就是那個看起來
象條虛線的。這樣你可以得到一個分離的菜單，裡面包括了所有菜單項。它會一直掛在那
裡，直到你關閉它。


工 具 欄

這裡包括使用最頻繁的操作的圖標。希望這些圖標功能顯而易見。另外，每個圖標都支持
"工具提示" (把鼠標移上去停一會兒就能看見這個提示)

"Edit/Global Settings/Toggle Toolbar" 菜單項可以關閉工具條。如果你從來都不使用
工具條，可以在 vimrc 文件中加上：
>
	:set guioptions-=T

這個命令從 'guioptions' 中刪除 "T" 標記。其它 GUI 部件也可以通過這種方法激活或
關閉。參見這個選項的相關幫助。


滾 動 條

默認情況下，右邊會有一個滾動條，它的作用是很明顯的。當你分割窗口的時候，每個窗
口都會有自己的滾動條。
    你可以通過 "Edit/Global Settings/Toggle Bottom Scrollbar" 來啟動一個水平滾
動條。這在比較模式或沒有設置 'wrap' 時非常有用 (後面有更多描述)。

在使用垂直分割的時候，只有右邊的窗口有滾動條，但當你把光標移到左邊的窗口上，右
邊的滾動條會對這個窗口起作用，這需要一些時間去適應。
    當你使用垂直分割的時候，可以考慮把滾動條放在左邊。這可以通過菜單激活，或者
使用 'guioptions' 選項：
>
	:set guioptions+=l

這是在 'guioptions' 中增加 'l' 標誌位。

==============================================================================
*09.2*	使用鼠標

標準是好東西。在微軟的 Windows 操作系統中，你可以用標準模式選中文本。X Windows
也有一套使用鼠標的標準。非常不幸，這兩套標準是不同的。
    幸運的是，你可以定制 Vim。你可以讓你的鼠標行為象 X Windows 或者象微軟
Windows 的鼠標。下面的命令使鼠標用起來像 X Windows：
>
	:behave xterm

而如下命令使鼠標用起來像微軟 Windows：
>
	:behave mswin

在 UNIX 操作系統中，默認的鼠標行為是 xterm。而默認的微軟 Windows 系統的鼠標行
為是在安裝的時候選定的。要瞭解這兩種行為的詳細信息，請參考 |:behave|。下面是一
些摘要：

XTERM 鼠 標 行 為

左鍵單擊		定位光標
左鍵拖動		在可視模式下選中文本
中鍵單擊		從剪貼板中粘貼文本
右鍵單擊		把選中的文本擴展到當前的光標位置


微軟 Windows 鼠標行為

左鍵單擊		定位光標
左鍵拖動		在選擇模式下選中文本 (參見 |09.4|)
按住 Shift，左鍵單擊    把選中的文本擴展到當前的光標位置
中鍵單擊		從剪貼板中粘貼文本
右鍵單擊		顯示一個彈出式菜單


可以進一步定制鼠標。請參見下面的選項：

	'mouse'		鼠標的使用模式
	'mousemodel'	鼠標單擊的效果
	'mousetime'	雙擊的間隔允許時間
	'mousehide'	輸入的時候隱藏鼠標
	'selectmode'	鼠標啟動可視模式還是選擇模式

==============================================================================
*09.3*	剪貼板

|04.7| 節已經介紹過剪貼板的基本使用了。這裡有一個重要的地方要解釋一下：對於
X-windows 系統，有兩個地方可以在程序間交換文本，而 MS-Windows 不是這樣的。

在 X-Windows，有一個 "當前選擇區" 的概念。它表示正被選中的文本。在 Vim 中，這
表示可視區 (假定你正使用默認的設置)。不需要任何其它操作，你就可以把這些文本貼
到別的程序中。
    例如，你用鼠標在本文中選中一些文本。Vim 會自動切換到可視模式，並高亮這些文
本。現在啟動另一個 gVim，(由於沒有指定文件名，它會顯示出一個空窗口)。點擊鼠標
中鍵。被選中的文本就會被貼進來。
    "當前選擇區" 會一直保持有效直到你選中其它文本。在另一個窗口中粘貼文本後，
在這個窗口中選中一些文字，你會發現上一個窗口中選中的文字顯示的方法跟原來有些區
別了，這表示這些文字已經不是 "當前選擇區" 了。

你不一定要用鼠標來選中文字，用鍵盤的 "可視" 命令也能達到相同的效果。

"真" 剪 貼 板

對於另一個交換文本的地方，我們稱之為 "真" 剪貼板以避免與上面的 "當前選擇區" 混
淆。通常 "當前選擇區" 和 "真" 剪貼板都稱為剪貼板，你需要習慣這些名稱。
    要把文字拷貝到真剪貼板，在一個 gVim 中選中一些文本，然後執行菜單命令
Edit/Copy。這樣文字就被拷貝到真剪貼板了。剪貼板的內容是不可見的，除非你使用特
別的顯示程序，例如 KDE 的 klipper 程序。
    現在，切換到另一個 gVim，把光標停在某個位置，然後執行菜單命令 Edit/Paste
菜單。你會看到真剪貼板中的內容被插入到當前的光標位置。


使 用 兩 種 剪 貼 板

這種同時使用 "當前選擇區" 和 "真剪貼板" 的操作方式聽起來很亂。但這是很有用的。
我們通過一個例子來說明。用 gVim 打開一個文件並執行如下命令：

- 在可視模式下選中兩個詞
- 使用 Edit/Copy 菜單把這些詞拷到剪貼板
- 再用可視模式選中另一個詞
- 執行 Edit/Paste 菜單命令。這樣第二次選中的詞會被前面剪貼板中的詞代替。
- 把鼠標移到另一個地方按中鍵，你會發現你剛被覆蓋的單詞被粘貼到新的位置。

如果你小心使用 "當前選擇區" 和 "真剪貼板" 兩個工具，你可以完成很多很有用的工
作。


使 用 鍵 盤

如果你不喜歡使用鼠標，你可以通過兩個寄存器來使用 "當前選擇區" 和 "真剪貼板" 兩
個剪貼板。"* 寄存器用於表示當前選擇區。
   要使文本變成 "當前選擇區"，只要使用可視模式即可。例如，要選中一整行只要輸入
"V"。
    要拷貝當前選擇區的內容：
>
	"*P

注意這裡 "P" 是大寫，表示把文字拷貝到光標的前面。

"+ 寄存器用於真剪貼板。例如，要把當前光標位置到行末的文本拷到真剪貼板：
>
	"+y$

記得吧，"y" 是 yank，這是 Vim 的拷貝命令。
    要把真剪貼板的內容拷到光標前面：
>
	"+P

這與 "當前選擇區" 一樣，只是用 (+) 寄存器取代了 (*) 寄存器。

==============================================================================
*09.4*	選擇模式

現在介紹一些在 MS-Windows 中比在 X-Windows 中更常被使用的東西 (但在兩個系統上
都可用)。你已經瞭解可視模式了。選擇模式與可視模式相似，也是用來選中文字的。但
有一個顯著區別：當輸入文本的時候，在選擇模式下，被選中的文字將被替換成新輸入的
文字。

要啟用選擇模式，先要激活它 (對於 MS-Windows，可能已經激活了，不過多做一次也沒
什麼)：
>
	:set selectmode+=mouse

現在用鼠標選中一些文本，這些文本會好像可視模式一樣被高亮。現在敲入一個字母。被
選中的文本被刪除，替換成新的字母。現在已經是插入模式了，你可以繼續輸入。

由於輸入普通文本導致選中的文字被刪除，這時你不能使用 "hjkl"，"w" 等移動命令。
這時可以使用 "Shift" 加功能鍵。<S-Left> (shift 鍵加左箭頭) 使光標左移。選中的
文字象可視模式一樣被擴展或者減少。其它箭頭起的作用你也可以猜到了，<S-End> 和
<S-Home> 也一樣。

你可以通過 'selectmode' 選項修改選擇模式的工作方式。

==============================================================================

下一章：|usr_10.txt|  作大修改

版權：參見 |manual-copyright|  vim:tw=78:ts=8:ft=help:norl:
